"""empty message

Revision ID: 5d288726235c
Revises: d6b55b9f9454
Create Date: 2024-08-23 22:56:35.705483

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5d288726235c'
down_revision: Union[str, None] = 'd6b55b9f9454'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hotels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('privileges', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('register_date', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('room')
    op.drop_table('user')
    op.drop_table('hotel')
    op.drop_table('booking')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('booking',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('hotel_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['hotel_id'], ['hotel.id'], name='booking_hotel_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='booking_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='booking_pkey')
    )
    op.create_table('hotel',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('hotel_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], name='hotel_room_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='hotel_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('register_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], name='user_room_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_pkey')
    )
    op.create_table('room',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('privileges', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('hotel_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hotel_id'], ['hotel.id'], name='room_hotel_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='room_pkey')
    )
    op.drop_table('users')
    op.drop_table('rooms')
    op.drop_table('hotels')
    op.drop_table('bookings')
    # ### end Alembic commands ###
